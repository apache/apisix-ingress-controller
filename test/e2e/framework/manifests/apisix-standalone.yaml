# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: apisix-conf
data:
  config.yaml: |
    deployment:
      role: traditional
      role_traditional:
          config_provider: yaml
      admin:
        allow_admin:
        - 0.0.0.0/0
        admin_key:
        - key: {{ .AdminKey }}
          name: admin
          role: admin
    nginx_config:
      worker_processes: 2
      error_log_level: info
    apisix:
      proxy_mode: http&stream      
      stream_proxy:                 # TCP/UDP proxy
        tcp:                        # TCP proxy port list
          - 9100
          - addr: 9110
            tls: true
        udp:                        # UDP proxy port list
          - 9200
    discovery:
      dns:
        servers:
        - "10.96.0.10:53"        # use the real address of your dns server.
                                 # currently we use KIND as the standard test environment, so here we can hard-code the default DNS address first.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix
  labels:
    app.kubernetes.io/name: apisix
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: apisix
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apisix
    spec:
      initContainers:
        - name: config-setup
          image: apache/apisix:dev
          command:
            - sh
            - -c
            - |
              echo "Copying default config directory to writable volume"
              cp -r /usr/local/apisix/conf/* /tmp/apisix-conf/
              echo "Overwriting config.yaml with custom configuration"
              cp /tmp/config-source/config.yaml /tmp/apisix-conf/config.yaml
              echo "Config setup completed successfully"
              ls -la /tmp/apisix-conf/
          volumeMounts:
            - name: config-source
              mountPath: /tmp/config-source
            - name: config-writable
              mountPath: /tmp/apisix-conf
      containers:
        - name: apisix
          image: apache/apisix:dev
          ports:
            - name: http
              containerPort: 9080
              protocol: TCP
            - name: https
              containerPort: 9443
              protocol: TCP
            - name: admin
              containerPort: 9180
              protocol: TCP
            - name: tcp
              containerPort: 9100
              protocol: TCP
            - name: udp
              containerPort: 9200
              protocol: UDP
            - name: tls
              containerPort: 9110
              protocol: TCP
          volumeMounts:
            - name: config-writable
              mountPath: /usr/local/apisix/conf
      volumes:
        - name: config-source
          configMap:
            name: apisix-conf
        - name: config-writable
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .ServiceName }}
  labels:
    app.kubernetes.io/name: apisix
spec:
  ports:
    - port: {{ .ServiceHTTPPort }}
      name: http
      protocol: TCP
      targetPort: 9080
    - port: {{ .ServiceHTTPSPort }}
      name: https
      protocol: TCP
      targetPort: 9443
    - port: 9180
      name: admin
      protocol: TCP
      targetPort: 9180
    - name: tcp
      port: 9100
      protocol: TCP
      targetPort: 9100
    - name: udp
      port: 9200
      protocol: UDP
      targetPort: 9200
    - name: tls
      port: 9110
      protocol: TCP
      targetPort: 9110
  selector:
    app.kubernetes.io/name: apisix 
  type: {{ .ServiceType | default "NodePort" }}
