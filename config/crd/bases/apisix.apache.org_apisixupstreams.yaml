---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: apisixupstreams.apisix.apache.org
spec:
  group: apisix.apache.org
  names:
    kind: ApisixUpstream
    listKind: ApisixUpstreamList
    plural: apisixupstreams
    shortNames:
    - au
    singular: apisixupstream
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        description: ApisixUpstream is the Schema for the apisixupstreams API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ApisixUpstreamSpec describes the specification of ApisixUpstream.
            properties:
              discovery:
                description: |-
                  Deprecated: this is no longer support on standalone mode.
                  Discovery is used to configure service discovery for upstream.
                properties:
                  args:
                    additionalProperties:
                      type: string
                    type: object
                  serviceName:
                    type: string
                  type:
                    type: string
                required:
                - serviceName
                - type
                type: object
              externalNodes:
                description: |-
                  ExternalNodes contains external nodes the Upstream should use
                  If this field is set, the upstream will use these nodes directly without any further resolves
                items:
                  description: ApisixUpstreamExternalNode is the external node conf
                  properties:
                    name:
                      type: string
                    port:
                      description: Port defines the port of the external node
                      type: integer
                    type:
                      description: ApisixUpstreamExternalType is the external service
                        type
                      type: string
                    weight:
                      type: integer
                  type: object
                minItems: 1
                type: array
              healthCheck:
                description: |-
                  Deprecated: this is no longer support on standalone mode.
                  The health check configurations for the upstream.
                properties:
                  active:
                    description: ActiveHealthCheck defines the active kind of upstream
                      health check.
                    properties:
                      concurrency:
                        minimum: 0
                        type: integer
                      healthy:
                        description: |-
                          ActiveHealthCheckHealthy defines the conditions to judge whether
                          an upstream node is healthy with the active manner.
                        properties:
                          httpCodes:
                            items:
                              type: integer
                            minItems: 1
                            type: array
                          interval:
                            type: string
                          successes:
                            maximum: 254
                            minimum: 0
                            type: integer
                        type: object
                      host:
                        type: string
                      httpPath:
                        type: string
                      port:
                        format: int32
                        maximum: 65535
                        minimum: 0
                        type: integer
                      requestHeaders:
                        items:
                          type: string
                        type: array
                      strictTLS:
                        type: boolean
                      timeout:
                        description: |-
                          A Duration represents the elapsed time between two instants
                          as an int64 nanosecond count. The representation limits the
                          largest representable duration to approximately 290 years.
                        format: int64
                        type: integer
                      type:
                        enum:
                        - http
                        - https
                        - tcp
                        type: string
                      unhealthy:
                        description: |-
                          ActiveHealthCheckUnhealthy defines the conditions to judge whether
                          an upstream node is unhealthy with the active manager.
                        properties:
                          httpCodes:
                            items:
                              type: integer
                            minItems: 1
                            type: array
                          httpFailures:
                            maximum: 254
                            minimum: 0
                            type: integer
                          interval:
                            type: string
                          tcpFailures:
                            maximum: 254
                            minimum: 0
                            type: integer
                          timeout:
                            type: integer
                        type: object
                    type: object
                  passive:
                    description: |-
                      PassiveHealthCheck defines the conditions to judge whether
                      an upstream node is healthy with the passive manager.
                    properties:
                      healthy:
                        description: |-
                          PassiveHealthCheckHealthy defines the conditions to judge whether
                          an upstream node is healthy with the passive manner.
                        properties:
                          httpCodes:
                            items:
                              type: integer
                            minItems: 1
                            type: array
                          successes:
                            maximum: 254
                            minimum: 0
                            type: integer
                        type: object
                      type:
                        type: string
                      unhealthy:
                        description: |-
                          PassiveHealthCheckUnhealthy defines the conditions to judge whether
                          an upstream node is unhealthy with the passive manager.
                        properties:
                          httpCodes:
                            items:
                              type: integer
                            minItems: 1
                            type: array
                          httpFailures:
                            maximum: 254
                            minimum: 0
                            type: integer
                          tcpFailures:
                            maximum: 254
                            minimum: 0
                            type: integer
                          timeout:
                            type: integer
                        type: object
                    type: object
                required:
                - active
                type: object
              ingressClassName:
                description: |-
                  IngressClassName is the name of an IngressClass cluster resource.
                  controller implementations use this field to know whether they should be
                  serving this ApisixUpstream resource, by a transitive connection
                  (controller -> IngressClass -> ApisixUpstream resource).
                type: string
              loadbalancer:
                description: |-
                  LoadBalancer represents the load balancer configuration for Kubernetes Service.
                  The default strategy is round robin.
                properties:
                  hashOn:
                    description: |-
                      The HashOn and Key fields are required when Type is "chash".
                      HashOn represents the key fetching scope.
                    type: string
                  key:
                    description: Key represents the hash key.
                    type: string
                  type:
                    type: string
                required:
                - type
                type: object
              passHost:
                description: |-
                  Configures the host when the request is forwarded to the upstream.
                  Can be one of pass, node or rewrite.
                enum:
                - pass
                - node
                - rewrite
                type: string
              portLevelSettings:
                items:
                  description: |-
                    PortLevelSettings configures the ApisixUpstreamConfig for each individual port. It inherits
                    configurations from the outer level (the whole Kubernetes Service) and overrides some of
                    them if they are set on the port level.
                  properties:
                    discovery:
                      description: |-
                        Deprecated: this is no longer support on standalone mode.
                        Discovery is used to configure service discovery for upstream.
                      properties:
                        args:
                          additionalProperties:
                            type: string
                          type: object
                        serviceName:
                          type: string
                        type:
                          type: string
                      required:
                      - serviceName
                      - type
                      type: object
                    healthCheck:
                      description: |-
                        Deprecated: this is no longer support on standalone mode.
                        The health check configurations for the upstream.
                      properties:
                        active:
                          description: ActiveHealthCheck defines the active kind of
                            upstream health check.
                          properties:
                            concurrency:
                              minimum: 0
                              type: integer
                            healthy:
                              description: |-
                                ActiveHealthCheckHealthy defines the conditions to judge whether
                                an upstream node is healthy with the active manner.
                              properties:
                                httpCodes:
                                  items:
                                    type: integer
                                  minItems: 1
                                  type: array
                                interval:
                                  type: string
                                successes:
                                  maximum: 254
                                  minimum: 0
                                  type: integer
                              type: object
                            host:
                              type: string
                            httpPath:
                              type: string
                            port:
                              format: int32
                              maximum: 65535
                              minimum: 0
                              type: integer
                            requestHeaders:
                              items:
                                type: string
                              type: array
                            strictTLS:
                              type: boolean
                            timeout:
                              description: |-
                                A Duration represents the elapsed time between two instants
                                as an int64 nanosecond count. The representation limits the
                                largest representable duration to approximately 290 years.
                              format: int64
                              type: integer
                            type:
                              enum:
                              - http
                              - https
                              - tcp
                              type: string
                            unhealthy:
                              description: |-
                                ActiveHealthCheckUnhealthy defines the conditions to judge whether
                                an upstream node is unhealthy with the active manager.
                              properties:
                                httpCodes:
                                  items:
                                    type: integer
                                  minItems: 1
                                  type: array
                                httpFailures:
                                  maximum: 254
                                  minimum: 0
                                  type: integer
                                interval:
                                  type: string
                                tcpFailures:
                                  maximum: 254
                                  minimum: 0
                                  type: integer
                                timeout:
                                  type: integer
                              type: object
                          type: object
                        passive:
                          description: |-
                            PassiveHealthCheck defines the conditions to judge whether
                            an upstream node is healthy with the passive manager.
                          properties:
                            healthy:
                              description: |-
                                PassiveHealthCheckHealthy defines the conditions to judge whether
                                an upstream node is healthy with the passive manner.
                              properties:
                                httpCodes:
                                  items:
                                    type: integer
                                  minItems: 1
                                  type: array
                                successes:
                                  maximum: 254
                                  minimum: 0
                                  type: integer
                              type: object
                            type:
                              type: string
                            unhealthy:
                              description: |-
                                PassiveHealthCheckUnhealthy defines the conditions to judge whether
                                an upstream node is unhealthy with the passive manager.
                              properties:
                                httpCodes:
                                  items:
                                    type: integer
                                  minItems: 1
                                  type: array
                                httpFailures:
                                  maximum: 254
                                  minimum: 0
                                  type: integer
                                tcpFailures:
                                  maximum: 254
                                  minimum: 0
                                  type: integer
                                timeout:
                                  type: integer
                              type: object
                          type: object
                      required:
                      - active
                      type: object
                    loadbalancer:
                      description: |-
                        LoadBalancer represents the load balancer configuration for Kubernetes Service.
                        The default strategy is round robin.
                      properties:
                        hashOn:
                          description: |-
                            The HashOn and Key fields are required when Type is "chash".
                            HashOn represents the key fetching scope.
                          type: string
                        key:
                          description: Key represents the hash key.
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      type: object
                    passHost:
                      description: |-
                        Configures the host when the request is forwarded to the upstream.
                        Can be one of pass, node or rewrite.
                      enum:
                      - pass
                      - node
                      - rewrite
                      type: string
                    port:
                      description: Port is a Kubernetes Service port, it should be
                        already defined.
                      format: int32
                      type: integer
                    retries:
                      description: |-
                        How many times that the proxy (Apache APISIX) should do when
                        errors occur (error, timeout or bad http status codes like 500, 502).
                      format: int64
                      type: integer
                    scheme:
                      description: |-
                        The scheme used to talk with the upstream.
                        Now value can be http, grpc.
                      enum:
                      - http
                      - https
                      - grpc
                      - grpcs
                      type: string
                    subsets:
                      description: |-
                        Subsets groups the service endpoints by their labels. Usually used to differentiate
                        service versions.
                      items:
                        description: ApisixUpstreamSubset defines a single endpoints
                          group of one Service.
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels is the label set of this subset.
                            type: object
                          name:
                            description: Name is the name of subset.
                            type: string
                        required:
                        - labels
                        - name
                        type: object
                      type: array
                    timeout:
                      description: Timeout settings for the read, send and connect
                        to the upstream.
                      properties:
                        connect:
                          type: string
                        read:
                          type: string
                        send:
                          type: string
                      type: object
                    tlsSecret:
                      description: Set the client certificate when connecting to TLS
                        upstream.
                      properties:
                        name:
                          minLength: 1
                          type: string
                        namespace:
                          minLength: 1
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    upstreamHost:
                      description: |-
                        Specifies the host of the Upstream request. This is only valid if
                        the pass_host is set to rewrite
                      type: string
                  required:
                  - port
                  type: object
                type: array
              retries:
                description: |-
                  How many times that the proxy (Apache APISIX) should do when
                  errors occur (error, timeout or bad http status codes like 500, 502).
                format: int64
                type: integer
              scheme:
                description: |-
                  The scheme used to talk with the upstream.
                  Now value can be http, grpc.
                enum:
                - http
                - https
                - grpc
                - grpcs
                type: string
              subsets:
                description: |-
                  Subsets groups the service endpoints by their labels. Usually used to differentiate
                  service versions.
                items:
                  description: ApisixUpstreamSubset defines a single endpoints group
                    of one Service.
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is the label set of this subset.
                      type: object
                    name:
                      description: Name is the name of subset.
                      type: string
                  required:
                  - labels
                  - name
                  type: object
                type: array
              timeout:
                description: Timeout settings for the read, send and connect to the
                  upstream.
                properties:
                  connect:
                    type: string
                  read:
                    type: string
                  send:
                    type: string
                type: object
              tlsSecret:
                description: Set the client certificate when connecting to TLS upstream.
                properties:
                  name:
                    minLength: 1
                    type: string
                  namespace:
                    minLength: 1
                    type: string
                required:
                - name
                - namespace
                type: object
              upstreamHost:
                description: |-
                  Specifies the host of the Upstream request. This is only valid if
                  the pass_host is set to rewrite
                type: string
            type: object
          status:
            description: ApisixStatus is the status report for Apisix ingress Resources
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
